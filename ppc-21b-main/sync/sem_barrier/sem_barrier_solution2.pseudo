// number of threads that have arrived to the barrier
shared count := 0
// Protects the increment of the count
shared can_access_count := semaphore(1)
// Locked (0) until all threads arrive, then it is unlocked (1)
shared barrier := semaphore(0)

main:
	thread_count := read_integer()
	create_threads(thread_count, secondary)


secondary:

  Statement A

  wait(can_access_count)
    count := count + 1
    if count == thread_count then
        signal(barrier)
    end if
  signal(can_access_count)

  wait(barrier)
  signal(barrier)  

  Statement B

