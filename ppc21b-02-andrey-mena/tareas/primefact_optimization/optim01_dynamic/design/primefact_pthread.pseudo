procedure main(file)
    Receives file
    numOfThreads = ask for how many threads

    while line != lastLine
        Read line
        if can_it_be_converted_to_integer64_greater_than_one
            convert line to integer
            minLimit = 0 
            maxLimit = integer64
            jobDivision = integer64/numOfThreads
            firstJobDivision = jobDivision
            for (i = 0 ; i <= numOfThreads ; i++) {
                maxLimit = jobDivision
                if (i = numOfThreads) {
                    pthread_Create(thread_i_, findFactors(integer64, minLimit, integer64))
                }else{
                    pthread_Create(thread_i_, findFactors(integer64, minLimit, maxLimit))
                }
                minLimit = jobDivision
                jobDivision = jobDivision+firstJobDivision
            }
            for (i = 0 ; i < numOfThreads ; i++) {
                pthread_join(thread_i_)
            }
            toStringDataBaseFactors()
        else if line=1 or line=0
            print "NA"
            else if insert "invalid number" in dataBase
    print all dataBase_results
end procedure

procedure findFactors(integer, minLimit, maxLimit)
  divider = 2
  while (divider <= integer) {
    if (integer % divider == 0) {
      if (isPrime(divider)) {
        store divider in dataBase_factors
      }
    }
    divider++
  }
end procedure

procedure bool isPrime(divider)
counter = 2
  while (counter <= divider/2) {
    if (divider % counter) {
      return false
    }
    counter++
  }
  return true
end procedure