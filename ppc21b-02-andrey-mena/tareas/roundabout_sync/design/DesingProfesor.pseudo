procedure main(argc, argv[]):
  // Analyze arguments
  shared drive_min_delay := 0
  shared drive_max_delay := 0
  shared verbose := false
  if argc >= 3 then
    drive_min_delay := integer(argv[1])
    drive_max_delay := integer(argv[2])
  end if
  if argc >= 4 then
    verbose := argv[3] = "-v"
  end if
  // Vehicle capacity in each segment of the roundabout
  shared constant segment_capacity = read_integer()
  // Create vehicles
  while can_read(stdin) do
    declare const enter_from = read_char(stdin)
    declare const exit_to = read_char(stdin)
    create_thread(vehicle, enter_from, exit_to)
  end while
end procedure

procedure vehicle(enter_from, exit_to):
  // ...
  drive()
  // ...
end procedure

procedure drive()
  declare const range = drive_max_delay - drive_min_delay
  declare duration := drive_min_delay
  if range > 0 then
    duration += rand() % range
  end if
  sleep(duration)
end procedure